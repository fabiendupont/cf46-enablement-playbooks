---
- name: ManageIQ virtual machine
  hosts: localhost
  vars:
    - ansible_connection: local
    - ovirt_api_endpoint: https://ovirt.example.com/ovirt-engine/api
    - ovirt_api_username: admin
    - ovirt_api_password: secret
    - miq_vm_name: miq
    - miq_vm_cpus: 4
    - miq_vm_memory: 8
    - miq_vm_ip_address: 192.168.122.2
    - miq_vm_netmask: 255.255.255.0
    - miq_vm_gateway: 192.168.122.1
    - miq_vm_dns_servers: 192.168.122.1
    - miq_vm_dns_domain: example.com

  tasks:
    - block:
      - name: Authenticate against oVirt API
        ovirt_auth:
          url: "{{ ovirt_api_endpoint }}"
          username: "{{ ovirt_api_username }}"
          password: "{{ ovirt_api_password }}"
          insecure: yes
        tags:
          - ovirt_debug

      - name: Create virtual machine
        ovirt_vms:
          auth: "{{ ovirt_auth }}"
          name: "fd-{{ miq_vm_name }}.{{ miq_vm_dns_domain }}"
          cluster: OVH
          template: rhel-7-server-ci
          cpu_sockets: "{{ miq_vm_cpus }}"
          memory: "{{ miq_vm_memory }}GiB"
          cloud_init:
            custom_script: |
              runcmd:
                - nmcli connection modify eth0 ipv4.method static ipv4.addresses {{ miq_vm_ip_address }}/{{ miq_vm_subnet_prefix }} ipv4.gateway {{ miq_vm_gateway }} ipv4.dns {{ miq_vm_dns_servers }} ipv4.dns-search {{ miq_vm_dns_domain }}
                - echo 'DNS2=10.32.96.1' >> /etc/sysconfig/network-scripts/ifcfg-eth0
                - ifdown eth0
                - ifup eth0
                - hostnamectl set-hostname {{ miq_vm_name }}.{{ miq_vm_dns_domain }}

      always:
        - name: Always revoke the SSO token
          ovirt_auth:
            state: absent
            ovirt_auth: "{{ ovirt_auth }}"

- name: Wait for instances to come up
  hosts: localhost
  gather_facts: no
  vars:
    - ansible_connection: local

  tasks:
    - name: Wait for virtual machine to be started
      wait_for:
        host: "{{ miq_vm_ip_address }}"
        port: 22

